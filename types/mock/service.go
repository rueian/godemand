// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/rueian/godemand/types (interfaces: Service)

// Package mock is a generated GoMock package.
package mock

import (
	gomock "github.com/golang/mock/gomock"
	types "github.com/rueian/godemand/types"
	reflect "reflect"
)

// MockService is a mock of Service interface
type MockService struct {
	ctrl     *gomock.Controller
	recorder *MockServiceMockRecorder
}

// MockServiceMockRecorder is the mock recorder for MockService
type MockServiceMockRecorder struct {
	mock *MockService
}

// NewMockService creates a new mock instance
func NewMockService(ctrl *gomock.Controller) *MockService {
	mock := &MockService{ctrl: ctrl}
	mock.recorder = &MockServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockService) EXPECT() *MockServiceMockRecorder {
	return m.recorder
}

// GetResource mocks base method
func (m *MockService) GetResource(arg0, arg1 string) (types.Resource, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetResource", arg0, arg1)
	ret0, _ := ret[0].(types.Resource)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetResource indicates an expected call of GetResource
func (mr *MockServiceMockRecorder) GetResource(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetResource", reflect.TypeOf((*MockService)(nil).GetResource), arg0, arg1)
}

// Heartbeat mocks base method
func (m *MockService) Heartbeat(arg0, arg1 string, arg2 types.Client) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Heartbeat", arg0, arg1, arg2)
	ret0, _ := ret[0].(error)
	return ret0
}

// Heartbeat indicates an expected call of Heartbeat
func (mr *MockServiceMockRecorder) Heartbeat(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Heartbeat", reflect.TypeOf((*MockService)(nil).Heartbeat), arg0, arg1, arg2)
}

// RequestResource mocks base method
func (m *MockService) RequestResource(arg0 string, arg1 types.Client) (types.Resource, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RequestResource", arg0, arg1)
	ret0, _ := ret[0].(types.Resource)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// RequestResource indicates an expected call of RequestResource
func (mr *MockServiceMockRecorder) RequestResource(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RequestResource", reflect.TypeOf((*MockService)(nil).RequestResource), arg0, arg1)
}
